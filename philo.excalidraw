{
  "type": "excalidraw",
  "version": 2,
  "source": "https://excalidraw.com",
  "elements": [
    {
      "type": "text",
      "version": 982,
      "versionNonce": 1551048027,
      "isDeleted": false,
      "id": "gLv2gzl1xMJNw1oDNyZmt",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -1206.1682367113563,
      "y": 331.2127945212468,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 361,
      "height": 422,
      "seed": 2052006847,
      "groupIds": [
        "jPG094w8amMOud90UnL4H"
      ],
      "strokeSharpness": "round",
      "boundElements": [],
      "updated": 1659275703318,
      "link": null,
      "locked": false,
      "fontSize": 28,
      "fontFamily": 1,
      "text": "- timestamp\n- data races\n- gettimeofday\n- pthread_create\n- pthread_detach\n- pthread_join\n- pthread_mutex_init\n- pthread_mutex_destroy\n- pthread_mutex_lock\n- pthread_mutex_unlock\n- threads\n- mutexes",
      "baseline": 412,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "- timestamp\n- data races\n- gettimeofday\n- pthread_create\n- pthread_detach\n- pthread_join\n- pthread_mutex_init\n- pthread_mutex_destroy\n- pthread_mutex_lock\n- pthread_mutex_unlock\n- threads\n- mutexes"
    },
    {
      "type": "text",
      "version": 894,
      "versionNonce": 769407445,
      "isDeleted": false,
      "id": "mjhuU4CoMiCYB89IXQSaN",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -1098.2539802067527,
      "y": 263.2344768270729,
      "strokeColor": "#000000",
      "backgroundColor": "#4c6ef5",
      "width": 122,
      "height": 35,
      "seed": 1824435825,
      "groupIds": [
        "TBLJAivbtiKirQEyxXW1C",
        "jPG094w8amMOud90UnL4H"
      ],
      "strokeSharpness": "sharp",
      "boundElements": [],
      "updated": 1659275703318,
      "link": null,
      "locked": false,
      "fontSize": 28,
      "fontFamily": 1,
      "text": "Keywords",
      "baseline": 25,
      "textAlign": "center",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Keywords"
    },
    {
      "type": "rectangle",
      "version": 1538,
      "versionNonce": 1484569083,
      "isDeleted": false,
      "id": "0FfxF09LYPf4JGCeBH1v3",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 2,
      "opacity": 100,
      "angle": 0,
      "x": -1206.1682367113563,
      "y": 254.33447203145352,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 337.82851300920754,
      "height": 52.80000959123877,
      "seed": 1865605855,
      "groupIds": [
        "TBLJAivbtiKirQEyxXW1C",
        "jPG094w8amMOud90UnL4H"
      ],
      "strokeSharpness": "round",
      "boundElements": [],
      "updated": 1659275703318,
      "link": null,
      "locked": false
    },
    {
      "type": "text",
      "version": 1647,
      "versionNonce": 104871733,
      "isDeleted": false,
      "id": "zlyswTciHdIUbJvNymwmO",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 2,
      "opacity": 100,
      "angle": 0,
      "x": -463.2646475875183,
      "y": 338.0212589800092,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 1095,
      "height": 598,
      "seed": 239418879,
      "groupIds": [
        "FkIMtFUmC1o8bmO84USIV"
      ],
      "strokeSharpness": "round",
      "boundElements": [],
      "updated": 1659275703318,
      "link": null,
      "locked": false,
      "fontSize": 28,
      "fontFamily": 1,
      "text": "- 1 veya daha fazla filozof yuvarlak bir masa etrafında oturur.\n- Bu masanın ortasında makarna vardır.\n- Filozoflar alternatif olarak yemek yer, düşünür veya uyur.\n- Yemek yerken düşünemez ve uyuyamazlar.\n- Düşünürken yemek yiyemez ve uyuyamazlar.\n- Uyurken yemek yiyemez ve düşünemezler.\n- Masada çatallar bulunmaktadır.\n- Çatal sayısı filozof sayısı kadardır. (fork == philosophers)\n- Makarnayı tek çatalla servis etmek ve yemek zordur.\n- Bu yüzden filozofun sol ve sağ elinde 1'er tane olacak şekilde çatal olmalıdır.\n- Filozof yemeğini yediğinde çatalları masaya bırakır ve uyumaya başlar.\n- Filozof uyandığında tekrar düşünmeye başlar.\n- Bir filozof açlıktan öldüğünde ise simulasyon durur.\n- Her filozofun yemek yemesi gerekir ve asla aç kalmamalıdır.\n- Filozoflar birbirleriyle konuşamazlar.\n- Filozoflar başka bir filozofun ölmek üzere olup olmadığını bilmezler.\n- Filozoflar ölmekten kaçınmalıdır.",
      "baseline": 588,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "- 1 veya daha fazla filozof yuvarlak bir masa etrafında oturur.\n- Bu masanın ortasında makarna vardır.\n- Filozoflar alternatif olarak yemek yer, düşünür veya uyur.\n- Yemek yerken düşünemez ve uyuyamazlar.\n- Düşünürken yemek yiyemez ve uyuyamazlar.\n- Uyurken yemek yiyemez ve düşünemezler.\n- Masada çatallar bulunmaktadır.\n- Çatal sayısı filozof sayısı kadardır. (fork == philosophers)\n- Makarnayı tek çatalla servis etmek ve yemek zordur.\n- Bu yüzden filozofun sol ve sağ elinde 1'er tane olacak şekilde çatal olmalıdır.\n- Filozof yemeğini yediğinde çatalları masaya bırakır ve uyumaya başlar.\n- Filozof uyandığında tekrar düşünmeye başlar.\n- Bir filozof açlıktan öldüğünde ise simulasyon durur.\n- Her filozofun yemek yemesi gerekir ve asla aç kalmamalıdır.\n- Filozoflar birbirleriyle konuşamazlar.\n- Filozoflar başka bir filozofun ölmek üzere olup olmadığını bilmezler.\n- Filozoflar ölmekten kaçınmalıdır."
    },
    {
      "type": "text",
      "version": 905,
      "versionNonce": 644465307,
      "isDeleted": false,
      "id": "82tL4r-55bRpClZPSts6N",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -450.85039108291454,
      "y": 263.2344768270729,
      "strokeColor": "#000000",
      "backgroundColor": "#4c6ef5",
      "width": 313,
      "height": 35,
      "seed": 282486129,
      "groupIds": [
        "8XLVMv7ZZmpXFr9pRhPws",
        "FkIMtFUmC1o8bmO84USIV"
      ],
      "strokeSharpness": "sharp",
      "boundElements": [],
      "updated": 1659275703318,
      "link": null,
      "locked": false,
      "fontSize": 28,
      "fontFamily": 1,
      "text": "Overview (Genel Bakış)",
      "baseline": 25,
      "textAlign": "center",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Overview (Genel Bakış)"
    },
    {
      "type": "rectangle",
      "version": 1723,
      "versionNonce": 536709269,
      "isDeleted": false,
      "id": "MMnp0kkiHjXF_3I7uO3GT",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 2,
      "opacity": 100,
      "angle": 0,
      "x": -463.2646475875183,
      "y": 254.33447203145352,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 337.82851300920754,
      "height": 52.80000959123877,
      "seed": 1213412167,
      "groupIds": [
        "8XLVMv7ZZmpXFr9pRhPws",
        "FkIMtFUmC1o8bmO84USIV"
      ],
      "strokeSharpness": "round",
      "boundElements": [],
      "updated": 1659275703318,
      "link": null,
      "locked": false
    },
    {
      "type": "text",
      "version": 1040,
      "versionNonce": 250394427,
      "isDeleted": false,
      "id": "TCwOJlkvP84dU6chg7C7w",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 2,
      "opacity": 100,
      "angle": 0,
      "x": 1483.3760759179188,
      "y": 331.1940165695685,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 1601,
      "height": 1085,
      "seed": 1396053586,
      "groupIds": [
        "5dnc0kGJmWDloIE_GKn3n"
      ],
      "strokeSharpness": "sharp",
      "boundElements": [],
      "updated": 1659275703318,
      "link": null,
      "locked": false,
      "fontSize": 28,
      "fontFamily": 1,
      "text": "Program name    = philo\nTurn in files     = Makefile, *.h, *.c, in directory philo/\nMakefile         = NAME, all, clean, fclean, re\nArguments       = number_of_philosophers\n                   time_to_die\n                   time_to_eat\n                   time_to_sleep\n                   [number_of_times_each_philosopher_must_eat]\nExternal functs  = memset,\n                    printf,\n                    malloc,\n                    free,\n                    write,\n                    usleep,\n                    gettimeofday,\n                    pthread_create,\n                    pthread_detach,\n                    pthread_join,\n                    pthread_mutex_init,\n                    pthread_mutex_destroy,\n                    pthread_mutex_lock,\n                    pthread_mutex_unlock\nLibft authorized  = No\nDescription        = Philosophers with threads and mutexes\n\nZorunlu kısım için özel kurallar şunlardır:\n    - Her filozof bir thread olmalıdır.\n    - Her filozof çifti arasında bir çatal vardır. \n    - Bu nedenle, birden fazla filozof varsa, her filozofun sol tarafında bir çatal, sağ tarafında bir çatal vardır. \n    - Sadece bir filozof varsa, masada sadece bir çatal olmalıdır.\n    - Filozofların çatalları çoğaltmasını önlemek için, çatal durumunu her biri için bir muteks ile korumalısınız.",
      "baseline": 1075,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Program name    = philo\nTurn in files     = Makefile, *.h, *.c, in directory philo/\nMakefile         = NAME, all, clean, fclean, re\nArguments       = number_of_philosophers\n                   time_to_die\n                   time_to_eat\n                   time_to_sleep\n                   [number_of_times_each_philosopher_must_eat]\nExternal functs  = memset,\n                    printf,\n                    malloc,\n                    free,\n                    write,\n                    usleep,\n                    gettimeofday,\n                    pthread_create,\n                    pthread_detach,\n                    pthread_join,\n                    pthread_mutex_init,\n                    pthread_mutex_destroy,\n                    pthread_mutex_lock,\n                    pthread_mutex_unlock\nLibft authorized  = No\nDescription        = Philosophers with threads and mutexes\n\nZorunlu kısım için özel kurallar şunlardır:\n    - Her filozof bir thread olmalıdır.\n    - Her filozof çifti arasında bir çatal vardır. \n    - Bu nedenle, birden fazla filozof varsa, her filozofun sol tarafında bir çatal, sağ tarafında bir çatal vardır. \n    - Sadece bir filozof varsa, masada sadece bir çatal olmalıdır.\n    - Filozofların çatalları çoğaltmasını önlemek için, çatal durumunu her biri için bir muteks ile korumalısınız."
    },
    {
      "type": "rectangle",
      "version": 1775,
      "versionNonce": 751414773,
      "isDeleted": false,
      "id": "8AhsF-eWbZ8JBC1yMCPvd",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 2,
      "opacity": 100,
      "angle": 0,
      "x": 1483.3760759179188,
      "y": 254.33447203145352,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 337.82851300920754,
      "height": 52.80000959123877,
      "seed": 50482343,
      "groupIds": [
        "1Md_qAGgFhJC8VocuVCmF",
        "5dnc0kGJmWDloIE_GKn3n"
      ],
      "strokeSharpness": "round",
      "boundElements": [],
      "updated": 1659275703318,
      "link": null,
      "locked": false
    },
    {
      "type": "text",
      "version": 726,
      "versionNonce": 543692763,
      "isDeleted": false,
      "id": "g3pEptx3lgUcT-_vWXg9I",
      "fillStyle": "hachure",
      "strokeWidth": 4,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1579.7903324225226,
      "y": 263.23447682707297,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 145,
      "height": 35,
      "seed": 1832589897,
      "groupIds": [
        "1Md_qAGgFhJC8VocuVCmF",
        "5dnc0kGJmWDloIE_GKn3n"
      ],
      "strokeSharpness": "sharp",
      "boundElements": [],
      "updated": 1659275703318,
      "link": null,
      "locked": false,
      "fontSize": 28,
      "fontFamily": 1,
      "text": "Mandatory",
      "baseline": 25,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Mandatory"
    },
    {
      "type": "text",
      "version": 616,
      "versionNonce": 195700565,
      "isDeleted": false,
      "id": "KhthtDcBiPCcABEVnkAcY",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 1171.69368148031,
      "y": 2.492943913624842,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 159,
      "height": 35,
      "seed": 557651551,
      "groupIds": [
        "k30zLPq-lnW_8QnwVgCt6"
      ],
      "strokeSharpness": "sharp",
      "boundElements": [],
      "updated": 1659275703318,
      "link": null,
      "locked": false,
      "fontSize": 28,
      "fontFamily": 1,
      "text": "philosophers",
      "baseline": 25,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "philosophers"
    },
    {
      "type": "rectangle",
      "version": 1530,
      "versionNonce": 2028889211,
      "isDeleted": false,
      "id": "d_LkLmQx-dCN2K9MoCogy",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 2,
      "opacity": 100,
      "angle": 0,
      "x": 1082.2794249757062,
      "y": -6.407060881994539,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 337.82851300920754,
      "height": 52.80000959123877,
      "seed": 1689361065,
      "groupIds": [
        "k30zLPq-lnW_8QnwVgCt6"
      ],
      "strokeSharpness": "round",
      "boundElements": [],
      "updated": 1659275703318,
      "link": null,
      "locked": false
    },
    {
      "type": "text",
      "version": 1047,
      "versionNonce": 519337141,
      "isDeleted": false,
      "id": "C9_hvM78mzEv4JLaZ_mNi",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 3449.6785591324187,
      "y": 263.23447682707274,
      "strokeColor": "#000000",
      "backgroundColor": "#4c6ef5",
      "width": 110,
      "height": 35,
      "seed": 1120557553,
      "groupIds": [
        "PloPEMG60nJthdDZ4KKkr"
      ],
      "strokeSharpness": "sharp",
      "boundElements": [],
      "updated": 1659275703318,
      "link": null,
      "locked": false,
      "fontSize": 28,
      "fontFamily": 1,
      "text": "Program",
      "baseline": 25,
      "textAlign": "center",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Program"
    },
    {
      "type": "rectangle",
      "version": 1801,
      "versionNonce": 1346510107,
      "isDeleted": false,
      "id": "P3UB0mTiRYewsvF1VE0Nv",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 2,
      "opacity": 100,
      "angle": 0,
      "x": 3335.764302627815,
      "y": 254.33447203145352,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 337.82851300920754,
      "height": 52.80000959123877,
      "seed": 465545223,
      "groupIds": [
        "PloPEMG60nJthdDZ4KKkr"
      ],
      "strokeSharpness": "round",
      "boundElements": [],
      "updated": 1659275703318,
      "link": null,
      "locked": false
    },
    {
      "type": "text",
      "version": 1007,
      "versionNonce": 1649284629,
      "isDeleted": false,
      "id": "eMWIUDH3zkT03HgGnPVmB",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 781.4424267822174,
      "y": 345.3306230991595,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 255,
      "height": 176,
      "seed": 346892209,
      "groupIds": [
        "drgv71JwQ19UrB3M0Ka3x"
      ],
      "strokeSharpness": "round",
      "boundElements": [],
      "updated": 1659275703318,
      "link": null,
      "locked": false,
      "fontSize": 28,
      "fontFamily": 1,
      "text": "- program adı philo\n- Makefile *c *h\n- Kök dizin /philo\n\n",
      "baseline": 166,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "- program adı philo\n- Makefile *c *h\n- Kök dizin /philo\n\n"
    },
    {
      "type": "text",
      "version": 954,
      "versionNonce": 1104527803,
      "isDeleted": false,
      "id": "9W6RBqFA_4yUMqOJNExv2",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 881.356683286821,
      "y": 263.2344768270729,
      "strokeColor": "#000000",
      "backgroundColor": "#4c6ef5",
      "width": 138,
      "height": 35,
      "seed": 486914225,
      "groupIds": [
        "8h7jKOBHB7c_oMlqXq25E",
        "drgv71JwQ19UrB3M0Ka3x"
      ],
      "strokeSharpness": "sharp",
      "boundElements": [],
      "updated": 1659275703318,
      "link": null,
      "locked": false,
      "fontSize": 28,
      "fontFamily": 1,
      "text": "Necessary",
      "baseline": 25,
      "textAlign": "center",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Necessary"
    },
    {
      "type": "rectangle",
      "version": 1684,
      "versionNonce": 1085049717,
      "isDeleted": false,
      "id": "qLMYHYShs9PzSAbYYX_5p",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 2,
      "opacity": 100,
      "angle": 0,
      "x": 781.4424267822174,
      "y": 254.33447203145352,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 337.82851300920754,
      "height": 52.80000959123877,
      "seed": 169209863,
      "groupIds": [
        "8h7jKOBHB7c_oMlqXq25E",
        "drgv71JwQ19UrB3M0Ka3x"
      ],
      "strokeSharpness": "round",
      "boundElements": [],
      "updated": 1659275703318,
      "link": null,
      "locked": false
    },
    {
      "type": "text",
      "version": 3144,
      "versionNonce": 1456198235,
      "isDeleted": false,
      "id": "Lh5LCF-CHXattTwKyNZii",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 2,
      "opacity": 100,
      "angle": 0,
      "x": -1206.1682367113563,
      "y": 1157.287730797169,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 1562,
      "height": 1295,
      "seed": 1826061361,
      "groupIds": [
        "5x3N8kQrAwhAx3IUUTnfC"
      ],
      "strokeSharpness": "round",
      "boundElements": [],
      "updated": 1659275703318,
      "link": null,
      "locked": false,
      "fontSize": 28,
      "fontFamily": 1,
      "text": "- Proje program olmalıdır.\n- Global değişkenler yasaktır.\n- Programımız 1'i opsiyonel 5 adet argüman almalıdır.\n- Bu argümanlar sırasıyla;\n- number_of_philosophers, time_to_die, time_to_eat, time_to_sleep\n- opsiyonel 5. argüman [number_of_times_each_philosopher_must_eat]\n- number_of_philosophers:\n    - Filozofların sayısı aynı zamanda çatalların sayısı.\n- time_to_die(in miliseconds):\n    - Bir filozof son öğününden itibaren veya simulasyonun başlangıcından\n    itibaren time_to_die süresine kadar yemek yemezse ölür.\n    - time_to_die aslında filozofun hayat döngüsünün maksimum zamanıdır.\n    işlerini bu süre sonlanmadan tamamlayabilirse yaşayabilir.\n- time_to_eat (in miliseconds):\n    - Bir filozofun yemek yemesi için geçen süre.\n    - Bu süre zarfında filozofun 2 çatal tutması gerekiyor.\n- time_to_sleep(in miliseconds):\n    - Bir filozofun uyuyarak geçireceği zaman.\n- number_of_times_each_philosopher_must_eat (Optional argument):\n    - Filozoflar belirtilen bu parametre sayısı kadar yemek yerse simulasyon durur.\n    - Bu parametre belirtilmezse bir filozof öldüğünde simulasyon durur.\n- Her filozof bir numara değerine sahiptir. 1 den başlayarak girilen filozof sayısı paramatresi kadar.\n- 1 numaralı filozof number_of_philosophers(yani girilen filozof sayısı numoralı filozof) un yanında oturur.\n- N numaralı herhangi başka bir filozof n + 1 ile n - 1 numaralı filozofların arasında oturur.\n\n- Programın ekrana basacağı loglar aşağıdaki gibi olmalıdır.\n- Bu loglar filozofta durum değişikliği meydana geldiğinde ekrana yazdırılmalıdır.\n    - timestamp_in_ms X has taken a fork (süre ,Numara, çatal aldı)\n    - timestamp_in_ms X is eating (süre ,Numara, yiyor)\n    - timestamp_in_ms X is sleeping (süre ,Numara, uyuyor)\n    - timestamp_in_ms X is thinking (süre ,Numara, düşünüyor)\n    - timestamp_in_ms X is died (süre ,Numara, öldü)\n- timestamp_in_ms o anki milisaniye değerin. X ise filizof numaran.\n- Ekrana basacağın durum mesajı harf harf yazıldığı için mesaja ait tüm cümlenin doğru şekilde çıktığından emin ol.\n- Yani karmaşık mesajlar olmamalıdır. Görüntülenen bir durum mesajı başka bir mesajla karıştırılmamalıdır.\n- Filozofun öldüğünü belirtecek olan mesaj filozofun ölümünden sonra maksimum 10ms içerisinde yazdırılmalıdır.\n- Yine hatırlatıyorum filozoflar ölmekten kaçınmalıdır.",
      "baseline": 1285,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "- Proje program olmalıdır.\n- Global değişkenler yasaktır.\n- Programımız 1'i opsiyonel 5 adet argüman almalıdır.\n- Bu argümanlar sırasıyla;\n- number_of_philosophers, time_to_die, time_to_eat, time_to_sleep\n- opsiyonel 5. argüman [number_of_times_each_philosopher_must_eat]\n- number_of_philosophers:\n    - Filozofların sayısı aynı zamanda çatalların sayısı.\n- time_to_die(in miliseconds):\n    - Bir filozof son öğününden itibaren veya simulasyonun başlangıcından\n    itibaren time_to_die süresine kadar yemek yemezse ölür.\n    - time_to_die aslında filozofun hayat döngüsünün maksimum zamanıdır.\n    işlerini bu süre sonlanmadan tamamlayabilirse yaşayabilir.\n- time_to_eat (in miliseconds):\n    - Bir filozofun yemek yemesi için geçen süre.\n    - Bu süre zarfında filozofun 2 çatal tutması gerekiyor.\n- time_to_sleep(in miliseconds):\n    - Bir filozofun uyuyarak geçireceği zaman.\n- number_of_times_each_philosopher_must_eat (Optional argument):\n    - Filozoflar belirtilen bu parametre sayısı kadar yemek yerse simulasyon durur.\n    - Bu parametre belirtilmezse bir filozof öldüğünde simulasyon durur.\n- Her filozof bir numara değerine sahiptir. 1 den başlayarak girilen filozof sayısı paramatresi kadar.\n- 1 numaralı filozof number_of_philosophers(yani girilen filozof sayısı numoralı filozof) un yanında oturur.\n- N numaralı herhangi başka bir filozof n + 1 ile n - 1 numaralı filozofların arasında oturur.\n\n- Programın ekrana basacağı loglar aşağıdaki gibi olmalıdır.\n- Bu loglar filozofta durum değişikliği meydana geldiğinde ekrana yazdırılmalıdır.\n    - timestamp_in_ms X has taken a fork (süre ,Numara, çatal aldı)\n    - timestamp_in_ms X is eating (süre ,Numara, yiyor)\n    - timestamp_in_ms X is sleeping (süre ,Numara, uyuyor)\n    - timestamp_in_ms X is thinking (süre ,Numara, düşünüyor)\n    - timestamp_in_ms X is died (süre ,Numara, öldü)\n- timestamp_in_ms o anki milisaniye değerin. X ise filizof numaran.\n- Ekrana basacağın durum mesajı harf harf yazıldığı için mesaja ait tüm cümlenin doğru şekilde çıktığından emin ol.\n- Yani karmaşık mesajlar olmamalıdır. Görüntülenen bir durum mesajı başka bir mesajla karıştırılmamalıdır.\n- Filozofun öldüğünü belirtecek olan mesaj filozofun ölümünden sonra maksimum 10ms içerisinde yazdırılmalıdır.\n- Yine hatırlatıyorum filozoflar ölmekten kaçınmalıdır."
    },
    {
      "type": "text",
      "version": 662,
      "versionNonce": 710235349,
      "isDeleted": false,
      "id": "7M3tIi5I7mUAB95MPBqNj",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 2,
      "opacity": 100,
      "angle": 0,
      "x": -1206.1682367113563,
      "y": 2506.2234813326877,
      "strokeColor": "#c92a2a",
      "backgroundColor": "transparent",
      "width": 633,
      "height": 35,
      "seed": 288311634,
      "groupIds": [
        "5x3N8kQrAwhAx3IUUTnfC"
      ],
      "strokeSharpness": "sharp",
      "boundElements": [],
      "updated": 1659275703318,
      "link": null,
      "locked": false,
      "fontSize": 28,
      "fontFamily": 1,
      "text": "Program data races (veri yarışı) içermemelidir.",
      "baseline": 25,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Program data races (veri yarışı) içermemelidir."
    },
    {
      "type": "text",
      "version": 1019,
      "versionNonce": 1341574907,
      "isDeleted": false,
      "id": "0g8xOR5lHdZsJx8VmGYS8",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": -1123.7539802067524,
      "y": 1087.7219783585078,
      "strokeColor": "#000000",
      "backgroundColor": "#4c6ef5",
      "width": 173,
      "height": 35,
      "seed": 947654833,
      "groupIds": [
        "7pNDbYddJlhM6rjV-nzWz",
        "5x3N8kQrAwhAx3IUUTnfC"
      ],
      "strokeSharpness": "sharp",
      "boundElements": [],
      "updated": 1659275703318,
      "link": null,
      "locked": false,
      "fontSize": 28,
      "fontFamily": 1,
      "text": "Global Rules",
      "baseline": 25,
      "textAlign": "center",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Global Rules"
    },
    {
      "type": "rectangle",
      "version": 1780,
      "versionNonce": 1792930357,
      "isDeleted": false,
      "id": "BNQVm4MIq9ntNxc9wWHE4",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 2,
      "opacity": 100,
      "angle": 0,
      "x": -1206.1682367113563,
      "y": 1078.8219735628882,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 337.82851300920754,
      "height": 52.80000959123877,
      "seed": 653512295,
      "groupIds": [
        "7pNDbYddJlhM6rjV-nzWz",
        "5x3N8kQrAwhAx3IUUTnfC"
      ],
      "strokeSharpness": "round",
      "boundElements": [],
      "updated": 1659275703318,
      "link": null,
      "locked": false
    }
  ],
  "appState": {
    "gridSize": null,
    "viewBackgroundColor": "#ffffff"
  },
  "files": {}
}